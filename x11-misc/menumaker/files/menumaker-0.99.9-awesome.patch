diff -Naru menumaker-0.99.9-old/MenuMaker/Awesome.py menumaker-0.99.9-new/MenuMaker/Awesome.py
--- menumaker-0.99.9-old/MenuMaker/Awesome.py	1970-01-01 09:00:00.000000000 +0900
+++ menumaker-0.99.9-new/MenuMaker/Awesome.py	2016-06-24 08:59:14.273012238 +0900
@@ -0,0 +1,124 @@
+import MenuMaker
+
+
+
+
+from MenuMaker import indent, writeFullMenu
+
+
+
+
+menuFile = "~/.config/awesome/menumaker/menu.lua"
+
+
+
+
+def _map(x) :
+	for d, s in (("&amp;", "&"), ("\'", "\"")) :
+		x = x.replace(s, d)
+	return x
+
+
+
+
+class Sep(object) :
+	def emit(self, level) :
+		return ['%s' % indent(level)]
+	def emit_menu(self, level) :
+		return ['']
+
+
+
+class App(object) :
+	def emit(self, level) :
+		x = indent(1)
+		cmd = self.app.execmd
+		if self.app.terminal :
+			cmd = MenuMaker.terminal.runCmd(cmd)
+		return ['%s{ "%s", "%s"},' % (x, _map(self.app.name),cmd)]
+	def emit_menu(self,level) :
+		return []
+
+
+
+
+class Menu(object) :
+	id = 0
+	def __init__(self) :
+		super(Menu, self).__init__()
+		self.id = Menu.id
+		Menu.id += 1
+	def emit_menu(self, level) :
+		menu = ['']
+		if len(self) != 0:
+			for x in self :
+				menu += x.emit_menu(level)
+			menu.append('')
+			menu += ['%smmenu["%s"] = {' % (indent(level), _map(self.name))]
+			for x in self :
+				menu += x.emit(level)
+			menu.append('%s}' % indent(level))
+			return menu
+		else: 
+			return []
+	def emit(self, level) :
+		menu = ['%s{ "%s", mmenu["%s"]},' % (indent(level), _map(self.name),_map(self.name))]
+		return menu
+
+
+
+
+class Root(object) :
+	name = "awesome_apps"
+	def __init__(self, subs) :
+		super(Root, self).__init__(subs)
+		self.id = "rootmenu"
+	def emit(self, level) :
+		menu=['module("menumaker.menu")',
+		      'mmenu = {}']
+		if writeFullMenu :
+			for x in self :
+				menu += x.emit_menu(level)
+			menu.append('mmenu["main"] = {')
+			for x in self :
+				menu += x.emit(level+1)			
+			menu.append('}')
+			return menu
+		else :
+			for x in self :
+				menu += x.emit_menu(level)
+			menu.append('')
+			menu = ['%s mmenu%s = {' % (indent(level), self.id)]
+			for x in self :
+				menu += x.emit(level + 1)
+				menu.append('%s}' % indent(level))
+			return menu
+
+
+
+
+
+class SysMenu(MenuMaker.Menu) :
+	name = "Awesome"
+	def __init__(self) :
+		subs = [
+			X('   { "manual", terminal .. " -e man awesome" },'),
+			X('   { "edit config", editor_cmd .. " " .. awful.util.getdir("config") .. "/rc.lua" },'),
+			X('   { "restart", awesome.restart },'),
+			X('   { "quit", awesome.quit }')
+		]
+		super(SysMenu, self).__init__(subs)
+		self.align = MenuMaker.Entry.StickBottom
+
+
+
+
+class X(MenuMaker.Entry) :
+	def __init__(self, x) :
+		super(X, self).__init__()
+		self.align = MenuMaker.Entry.StickBottom
+		self.x = x
+	def emit_menu(self, level) :
+		return ['']
+	def emit(self, level) :
+		return [indent(level) + self.x]
diff -Naru menumaker-0.99.9-old/MenuMaker/__init__.py menumaker-0.99.9-new/MenuMaker/__init__.py
--- menumaker-0.99.9-old/MenuMaker/__init__.py	2015-06-15 03:59:08.000000000 +0900
+++ menumaker-0.99.9-new/MenuMaker/__init__.py	2016-06-24 08:54:14.319693936 +0900
@@ -27,6 +27,7 @@
 
 
 fronts = {
+	Kw("Awesome")		: KwS("Awesome"),
 	Kw("IceWM")			: KwS("IceWM"),
 	Kw("BlackBox")		: KwS("BlackBox"),
 	Kw("FluxBox")		: KwS("FluxBox"),
@@ -43,6 +44,7 @@
 # FIXME : the order should be frontend-specific
 # For instance, Xfce may want to have Xfterm the preferable terminal
 terms = [
+	(T.st, KwS("St")),
 	(T.xterm, KwS("Xterm")),
 	(T._xfterm, KwS("Xfterm")),
 	(T.xvt, KwS("Rxvt", "Xvt")),
diff -Naru menumaker-0.99.9-old/Prophet/Legacy/Shell.py menumaker-0.99.9-new/Prophet/Legacy/Shell.py
--- menumaker-0.99.9-old/Prophet/Legacy/Shell.py	2015-06-15 03:59:08.000000000 +0900
+++ menumaker-0.99.9-new/Prophet/Legacy/Shell.py	2016-06-24 08:57:03.673018787 +0900
@@ -189,6 +189,14 @@
 
 
 
+class st(_Terminal) :
+	name = "St"
+	comment = "Simple terminal emulator"
+	keywords = KwS(TerminalEmulator, Core)
+
+
+
+
 class xterm(_Terminal) :
 	name = "Xterm"
 	comment = "X terminal emulator"
@@ -200,7 +208,7 @@
 class xvt(_Terminal) : # FIXME : do we need a separate entry for rxvt?
 	name = "Rxvt"
 	comment = "X terminal emulator"
-	exes = ["rxvt", "xvt"]
+	exes = ["urxvt", "rxvt", "xvt"]
 	keywords = KwS(TerminalEmulator)
 
 
